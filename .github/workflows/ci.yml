name: "CI - Nix"
on:
  push:
    branches:
      - main
      - module
  pull_request:
    branches:
      - main
      - module
jobs:
  pieces:
    name: "Nix build ${{ matrix.build }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}-latest"
    strategy:
      matrix:
        os: [macos, ubuntu]
        build: ["pinocchio", "py-aligator", "gepetto-viewer", "dev-shell-hpp", "dev-shell-hpp-bin", "python", "ros"]
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
      - uses: cachix/cachix-action@v16
        with:
          name: gepetto
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          extraPullNames: ros
      - run: nix build -L ".#${{ matrix.build }}"
  complete:
    needs: pieces
    name: "Nix build on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}-latest"
    strategy:
      matrix:
        os: [macos, ubuntu]
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
      - uses: cachix/cachix-action@v16
        with:
          name: gepetto
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          extraPullNames: ros
      - run: nix flake check -L
  check:
    if: always()
    name: check-macos-linux-nix
    runs-on: ubuntu-latest
    needs:
      - pieces
      - complete
    steps:
      - uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
